#!/usr/bin/env bash

function show_help() {
  name=$(basename ${0})
  cat <<EOF
Usage:
  ${name} [check]             Displays whether databag encryption is enabled
  ${name} toggle              Toggles automatic databag encryption
  ${name} audit [bag] [item]  Displays whether (the given) data bag(s) are encrypted
  ${name} -h | -?

Options:
  -h, -?  Show this help message
EOF
  exit 0
}

# Reset getopts for the shell
OPTIND=1

# Options parsing
while getopts "h?" opt; do
  case "${opt}" in
    h|\?)
      show_help
      exit 0
      ;;
  esac
done

knife_config="${HOME}/.chef/knife.rb"

if [ ! -f "${knife_config}" ]; then
  echo "${knife_config} not found!"
  exit 1
fi

base_prefix="^[[:space:]]*"
disabled_prefix="${base_prefix}#[[:space:]]*"

edbs_enabled="${base_prefix}encrypted_data_bag_secret"
edbs_disabled="${disabled_prefix}encrypted_data_bag_secret"
ksf_enabled="${base_prefix}knife\[:secret_file]"
ksf_disabled="${disabled_prefix}knife\[:secret_file]"

function check_encryption() {
  if grep -q "${edbs_disabled}" "${knife_config}"; then
    if grep -q "${ksf_disabled}" "${knife_config}"; then
      echo "Encryption disabled!"
    else
      echo "Encryption mismatch!"
    fi
  elif grep -q "${edbs_enabled}" "${knife_config}"; then
    if grep -q "${ksf_enabled}" "${knife_config}"; then
      echo "Encryption enabled!"
    else
      echo "Encryption mismatch!"
    fi
  else
    echo "Encryption state unknown!"
  fi
}

function toggle_encryption() {
  state=$(check_encryption | awk '{print $2}' | tr -d '!$')

  if [ "${state}" == "disabled" ]; then
    sed -i '' "s/${edbs_disabled}/encrypted_data_bag_secret/" "${knife_config}"
    sed -i '' "s/${ksf_disabled}/knife\[:secret_file]/" "${knife_config}"
    check_encryption
  elif [ "${state}" == "enabled" ]; then
    sed -i '' "s/${edbs_enabled}/# encrypted_data_bag_secret/" "${knife_config}"
    sed -i '' "s/${ksf_enabled}/# knife\[:secret_file]/" "${knife_config}"
    check_encryption
  else
    echo >&2 "Unable to toggle! [$(check_encryption)]"
    exit 1
  fi
}

function check_knife() {
  command -v "knife" >/dev/null 2>&1 || {
    echo >&2 "knife is required to use this command!"
    exit 1
  }
}

function audit_encryption() {
  initial_state=$(check_encryption | awk '{print $2}' | tr -d '!$')

  if [ "${initial_state}" != "disabled" ]; then
    toggle_encryption
    echo
  fi

  item="${2}"

  for bag in ${1:-$(knife data bag list 2>/dev/null)}; do
    for item in ${2:-$(knife data bag show "${bag}" 2>/dev/null)}; do
      echo -n "Checking ${bag}/${item}... "

      if knife data bag show "${bag}" "${item}" 2>/dev/null | grep -q encrypted_data; then
        echo -e "\033[1;32mEncrypted!\033[0;39m"
      else
        echo -e "\033[1;31mNOT encrypted!\033[0;39m"
      fi
    done
    echo
  done

  if [ "${initial_state}" != "disabled" ]; then
    toggle_encryption
  fi
}

case "${1}" in
  toggle)
    toggle_encryption
    exit 0
    ;;
  check|"")
    check_encryption
    exit 0
    ;;
  audit)
    check_knife
    audit_encryption "${2}" "${3}"
    exit 0
    ;;
  *)
    echo >&2 "Unknown command: ${1}"
    exit 1
    ;;
esac
