#!/usr/bin/env bash

show_help() {
  name=$(basename "${0}")
  cat <<EOF
${name} will knock on port 22 of the given host
and then SSH to the host once successful

Usage:
  ${name} HOST
  ${name} -h | --help | -?

Options:
  -h, --help, -?  Show this help message
EOF
  exit 0
}

# Options parsing
POSITIONAL=()
while [[ $# -gt 0 ]]; do
  case $1 in
    -\?|-h|--help)
      show_help
      ;;
    *)
      POSITIONAL+=("$1")
      shift
  esac
done
set -- "${POSITIONAL[@]}"

[[ $# -eq 0 ]] && show_help

require() {
  name="${2:-${1}}"
  command -v "${1}" >/dev/null 2>&1 || {
    printf 'The %s tool is required to use this script!\n' "${name}" >&2
    [[ -z "${3}" ]] || printf '\tSee: %s\n' "${3}" >&2
    exit 1
  }
}

require 'nc'
require 'sleep'
require 'ssh'

# Stop macOS from taking over BASH_REMATCH
[[ "$(uname)" == 'Darwin' ]] && unset PROMPT_COMMAND

regex() {
  [[ $1 =~ $2 ]] && printf '%s\n' "${BASH_REMATCH[1]}"
}

if [[ $1 =~ @ ]]; then
  host=$(regex "${1}" "^.*@(.*)$")
else
  host="${1}"
fi

printf 'Knocking on %s...' "${host}"
until nc -vzw 2 "${host}" 22 2>/dev/null; do
  sleep 2
  printf '.'
done

printf ' \033[1;32mAnswered!\033[0;39m\n'
ssh "${1}"

exit 0
