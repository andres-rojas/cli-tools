#!/usr/bin/env sh

#region helper functions
basename() {
  : "${1%/}"
  printf '%s\n' "${_##*/}"
}

show_help() {
  name=$(basename "${0}")
  cat <<EOF
${name} generates a random password of the given length

Usage:
  ${name} [LENGTH]
  ${name} -h | --help | -?

Options:
  -h, --help, -?  Show this help message
EOF
  exit 0
}
#endregion helper functions

#region options parsing
# Options parsing
POSITIONAL=()
while [[ $# -gt 0 ]]; do
  case $1 in
    -\?|-h|--help)
      show_help
      ;;
    *)
      POSITIONAL+=("$1")
      shift
  esac
done
set -- "${POSITIONAL[@]}"
#endregion options parsing

#region requirements
require() {
  name="${2:-${1}}"
  command -v "${1}" >/dev/null 2>&1 || {
    printf 'The %s tool is required to use this script!\n' "${name}" >&2
    [[ -z "${3}" ]] || printf '\tSee: %s\n' "${3}" >&2
    exit 1
  }
}

require 'base64'
require 'dd'
#endregion requirements

#region main
length=${1:-32}

# MacOS uses POSIX utils by default
case "${OSTYPE}" in
  "darwin"*)
    : 'break'
    ;;
  *)
    : 'wrap'
esac
base64_opt="$_"

pw="$(dd if=/dev/urandom bs=1 count="${length}" 2>/dev/null | base64 --${base64_opt}=0)"
pw="${pw//=}"
pw="${pw:0:${length}}"

printf '%s\n' "${pw}"
exit 0
#endregion main
